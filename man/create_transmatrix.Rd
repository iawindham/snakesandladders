% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_transmatrix.R
\name{create_transmatrix}
\alias{create_transmatrix}
\title{Creates a transition matrix of probabilities for each square on the board}
\usage{
create_transmatrix(input, roll)
}
\arguments{
\item{input}{A vector with information about the gameboard.  Typically, this should be a board that has already been modified
with snake and ladder transitions via \code{add_snakesandladders()}.  However, the user can use a standard board with no snakes or ladders if they choose.}

\item{roll}{Indicates the number of sides on a fictional die.  Can be any number, but typically a single, six-sided die is used in-game.}
}
\value{
a transition matrix with a number of rows and columns corresponding to the board length.  Contains the probabilities for moving from any one square to another.
}
\description{
\code{create_transmatrix()} creates the transition matrix necessary to perform the markov chain simulation in the function \code{markov_chain()}.
A markov chain transition matrix contains all the probabilities for moving from any one board square to any other.
The starting square is represented by the row number, and the ending square by the column number.
For this simulation, however, row/column 1 represents the fictional square "0" because the game of Snakes and Ladders begins off the board rather than at square 1. 
Therefore, a typical 100 square Snakes and Ladders board will be represented by a 101x101 matrix.
}
\examples{
create_transmatrix(input = add_snakesandladders(snakematrix = default_ladders_and_snakes, board = default_input_board), roll = 6)

}
